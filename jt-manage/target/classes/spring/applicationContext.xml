<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd">
  <!-- 开启包扫描 -->
<context:component-scan base-package="com.jt"/>
 <!-- spring加载properties -->
 <!--  <context:property-placeholder location="classpath:/properties/jdbc.properties"/> -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
     <property name="locations">
       <list>
          <value>classpath:/properties/jdbc.properties</value>
          <value>classpath:/properties/redis.properties</value>
       </list>
     </property>
  </bean>
 <!--管理数据源  -->
 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
</bean>
<!-- 配置事物策略 注解方式和配置文件方式 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
  <property name="dataSource" ref="dataSource"/>  
</bean>
<!--定义事务管理策略Required:必须添加事务
               NEVER：不添加事务
               SUPPORTS：如果之前有事务则合并为一个事务
  -->
 <tx:advice id="txAdvice" transaction-manager="transactionManager">
   <tx:attributes>
       <tx:method name="save*" propagation="REQUIRED"/>
       <tx:method name="delete*" propagation="REQUIRED"/>
       <tx:method name="update*" propagation="REQUIRED"/>
       <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
       <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
   </tx:attributes>
 </tx:advice>
 <!-- 配置事务切面  Content Model : (pointcut*, advisor*, aspect*)
  1.按类匹配：within（包名.类名）
  2.按方法和参数匹配：（细粒度）
  execution（返回值类型 包名.类名.方法名（参数列表））
  AOP:在不影响源码的条件下，对方法做了扩展
   通知类型：
   1.前置通知
   2.后置通知
   3.异常通知
   4.最终通知 都无法控制方法的执行
   5.环绕通知 可以干扰方法的执行
 -->
  <aop:config>
    <aop:pointcut expression="execution(* com.jt.manage.service..*.*(..))" id="pc"/>
    <aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
  </aop:config>
  
</beans>